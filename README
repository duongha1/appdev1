# this is the first version
This project is to run a Raspberry PI as an audio device. The device is able to do 2 functions: as 
a sound collector and as a test-tone generator.

Table of Content
	1. Configuration Instructions
	2. Installation Instructions
	3. Opertating Instructions
	4. File list (Manifest)
	5. Copyright / Copyleft
	6. Contract Information
	7. Credits and Acknowledgements
	
-----------------------------

1. Configuation Instructions

The application is running on a Raspberry Pi 3 model B. This Pi should come with a USB sound card, 
a network connection, a microphone.

-----------------------------

1.1. Configure USB sound card as default audio device

.Firstly, we need the USB sound card and apply it into Rasberry. 
.To ensure your USB sound card is mounted, you can use “lsusb” command. 
.Use “sudo nano /etc/asound.conf” command and put following content to the file:

pcm.!default {
  type plug
  slave {
    pcm "hw:1,0"
  }
}
ctl.!default {
    type hw
    card 1
}

.Go to your home directory. Use “nano .asoundrc” command and put the same content to the file.
.Run “alsamixer” you should be able to see that USB sound card is the default audio device. For 
a more sensitive sound detection, it is better to maximize the volume of “Mic”.

-----------------------------

1.2 Install Libcurl library

Here are instruction to install libcurl library:

.Firstly, use command "ls /usr/include/curl" or "ls /usr/include/arm-linux-gnueabihf/curl" to 
identify that libcurl library is installed.
.If the folder does not exist, then running “sudo apt-get update” to update the application list.
.Run “sudo apt-get install libcurl3” to install the libcurl3.
.Run “sudo apt-get install libcurl4-openssl-dev” to install the development API of libcurl4.

-----------------------------

2. Installation Instructions
.Type "make" command to make executable file in your installation directory.
.Then, type "ls" command and you should see a file named "sound.out".

-----------------------------

3. Operating Instructions

*Showing frequency and peak counting on the bar chart:
.Type "./sound.out" command to run sound.out file, and the terminal will display the bar chart.
.Make some noise on microphone and the bar chart will shows different sound level as your sound.
.Try to make noise around microphone and see the difference on bar chart. 
.To stop the program, type "Ctrl" + "C".

-----------------------------

4. File list(Manifest)

The project contains following files: 

--README : this file (information abut other files)
--makefile : the makefile of this project 
--sound.c : the module containing functions about sound processing including sensing sound through 
microphone and calculating for dB as well as finding number of peaks in .wav file 
--sound.h : the header of sound.c 
--screen.c : the module containing functions about screen control and movement and bar chart display.
--screen.h : the header of screen.c 
--comm.c : the communication module using libcurl by sending data to calculate 1 second of sound samples 
into 8-pieces of slow decibel(ISO standard).
--comm.h : the header file of comm.c 
--main.c : contains main() function 
--curltest.c : data transfer from or to a server, using common Internet protocol.
--sound.php : the server page to receive data

-----------------------------

5. Copyleft
.Coppyleft 2019: The source code is done by Duong Ha.
.Copyleft 2019: This project is cooperated with an instructor: Mr.Gao Chao from Vaasa University of 
Applied Sciences.
.I use Raspberry Pi 3 model B which is a device of Vaasa University of Applied Sciences.
.All the source code files are free to use and distribute!

-----------------------------

6. Contract Information

Duong Minh Ha / Information Technology
Vaasa University of Applied Sciences
Email: nhannguyen290520@gmail.com

-----------------------------

7. Credits and Acknowledgements

I would like to express my special thanks of gratitude to Mr. Gao Chao for great support my first project, 
I have learned a lot about the format as well as concepts development for a project. This is a premise for 
me to make other projects in the future.
